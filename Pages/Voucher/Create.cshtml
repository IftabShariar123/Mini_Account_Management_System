@page
@model CreateModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<h2>Create Voucher</h2>

<form method="post">
    <div class="form-group">
        <label>Date</label>
        <input asp-for="Voucher.VoucherDate" type="date" class="form-control" />
    </div>

    <div class="form-group">
        <label>Reference No</label>
        <input asp-for="Voucher.ReferenceNo" class="form-control" placeholder="Enter Reference No"/>
    </div>

    <div class="form-group">
        <label>Voucher Type</label>
        <select asp-for="Voucher.VoucherType" class="form-control">
            <option value="">-- Select Type --</option>
            <option>Journal</option>
            <option>Payment</option>
            <option>Receipt</option>
        </select>
    </div>

    <h4 class="mt-3">Line Items</h4>
    <div id="lineItems">
        <div class="row mb-2 lineItem">
            <div class="col-md-4">
                <select name="Voucher.LineItems[0].AccountId" class="form-control">
                    @foreach (var acc in Model.Accounts)
                    {
                        <option value="@acc.Value">@acc.Text</option>
                    }
                </select>
            </div>
            <div class="col-md-3">
                <input name="Voucher.LineItems[0].DebitAmount" class="form-control" placeholder="Debit Tk" />
            </div>
            <div class="col-md-3">
                <input name="Voucher.LineItems[0].CreditAmount" class="form-control" placeholder="Credit Tk" />
            </div>
            <div class="col-md-2">
                <button type="button" class="btn btn-danger remove">Remove</button>
            </div>
        </div>
    </div>

    <button type="button" class="btn btn-secondary" onclick="addRow()">Add Line</button>
    <br>
    <button type="submit" class="btn btn-primary mt-3">Submit</button>
    <br><br>
    <a asp-page="Index" class="btn btn-secondary">← Back to List</a>

</form>

@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
        {
            <p>@error.ErrorMessage</p>
        }
    </div>
}


@section Scripts {
    <script>
        let index = 1;

        const accounts = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.Accounts));

        function addRow() {
            let options = "";
            for (let acc of accounts) {
                options += `<option value="${acc.Value}">${acc.Text}</option>`;
            }

            const row = document.createElement("div");
            row.classList.add("row", "mb-2", "lineItem");
            row.innerHTML = `
                <div class="col-md-4">
                    <select name="Voucher.LineItems[${index}].AccountId" class="form-control">
                        ${options}
                    </select>
                </div>
                <div class="col-md-3">
                    <input name="Voucher.LineItems[${index}].DebitAmount" class="form-control" placeholder="Debit" />
                </div>
                <div class="col-md-3">
                    <input name="Voucher.LineItems[${index}].CreditAmount" class="form-control" placeholder="Credit" />
                </div>
                <div class="col-md-2">
                    <button type="button" class="btn btn-danger remove">Remove</button>
                </div>`;

            document.getElementById("lineItems").appendChild(row);
            index++;
        }

        document.addEventListener('click', function (e) {
            if (e.target && e.target.classList.contains("remove")) {
                e.target.closest(".lineItem").remove();
            }
        });
    </script>
}
